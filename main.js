// Modules to control application life and create native browser window
const {app, BrowserWindow} = require('electron')

// Keep a global reference of the window object, if you don't, the window will
// be closed automatically when the JavaScript object is garbage collected.
let mainWindow

function createWindow () {
  // Create the browser window.
  mainWindow = new BrowserWindow({width: 800, height: 600})

  // and load the index.html of the app.
  mainWindow.loadFile('index.html')

  // Open the DevTools.
  mainWindow.webContents.openDevTools()

  // Emitted when the window is closed.
  mainWindow.on('closed', function () {
    // Dereference the window object, usually you would store windows
    // in an array if your app supports multi windows, this is the time
    // when you should delete the corresponding element.
    mainWindow = null
  })

  var ref = require("ref");
  var ffi = require("ffi");
  var arrayType = require("ref-array")
  
  // typedefs
  var myobj = ref.types.void // we don't know what the layout of "myobj" looks like
  var myobjPtr = ref.refType(myobj);

  var floatArray = arrayType(ref.types.float);


  // var lib = ffi.Library('/Users/yaar/Developer/electron-quick-start/libtest_cpp_js2',{
  //   "create_test_class": [myobjPtr, ['int']],
  //   "printContent":['void', [myobjPtr]]
  // });
  // let obj = lib.create_test_class(5)
  // console.log(lib.printContent(obj))

  var lib = ffi.Library('/Users/yaar/Developer/electron-quick-start/libspeakerVerification.dylib', {
    "get_xvector_graph": [myobjPtr, ['string']],
    "verify_speaker_xvector": ['float', [floatArray, 'int', myobjPtr]]
  })

  var lib2 = ffi.Library('/Users/yaar/Developer/electron-quick-start/libtest_cpp_js2.dylib', {
    "return_array": ["float *", []],
    "infiniteloop": ['int', []]
  })

  var xvector = lib.get_xvector_graph('/Users/yaar/Downloads/test/data/configs/verify_xvector.conf')
  console.log("got xvector", xvector)
  let testArray = [1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3, 1.2, 2.3]
  console.log(lib.verify_speaker_xvector(testArray, 4096, xvector))

  let testarray2 = lib2.return_array();
  console.log(testarray2[0]+" %%%$$$ "+testarray2[1])
  console.log(testarray2)

  console.log("entering infinite loop")
  // try{
  //   var testInt = lib2.infiniteloop()
  // }catch(err){
  //   console.log(err)
  // }finally{
  //   console.log("finally")
  // }
  // let blob = new Blob([testarray2], { type: 'text/plain' })
  //         // var file = new File([blob], '/Users/yaar/Developer/yaar-desktop-app/wav/1.wav', {type: 'audio/wav', lastModified: Date.now()})
          
  //         let reader = new FileReader()
  //         let fileNum = 0;
  //         reader.readAsArrayBuffer(blob)
  //         reader.onload = () => {
  //           if (reader.readyState === 2) {
  //             let boop = new Uint8Array(reader.result)
  //             fs.writeFileSync(__dirname + '/files/raw-' + fileNum + '.txt', boop)
  //             fileNum += 1
  //           }
  //         }
  //         console.log("saving file"+__dirname + '/files/raw-')
// // typedefs
// var myobj = ref.types.void // we don't know what the layout of "myobj" looks like
// var myobjPtr = ref.refType(myobj);

// var MyLibrary = ffi.Library('libspeakerVerification', {
//   "get_xvector_graph": [ 'XvectorSystem', [ 'string' ] ]
// });

// MyLibrary.get_xvector_graph("/Users/yaar/Developer/electron-quick-start/conf1")

}

// This method will be called when Electron has finished
// initialization and is ready to create browser windows.
// Some APIs can only be used after this event occurs.
app.on('ready', createWindow)

// Quit when all windows are closed.
app.on('window-all-closed', function () {
  // On OS X it is common for applications and their menu bar
  // to stay active until the user quits explicitly with Cmd + Q
  if (process.platform !== 'darwin') {
    app.quit()
  }
})

app.on('activate', function () {
  // On OS X it's common to re-create a window in the app when the
  // dock icon is clicked and there are no other windows open.
  if (mainWindow === null) {
    createWindow()
  }
})

// In this file you can include the rest of your app's specific main process
// code. You can also put them in separate files and require them here.
